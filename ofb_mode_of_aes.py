#Importing the module I've written to get hash code.
import hash

#Importing the required libraries. Only for implementing AES. Rest all, we've done it without the help of libraries.
from Crypto.Cipher import AES
from Crypto.Random import get_random_bytes




# This is the plain Text
plain_text = b"Suhas, Bharath, KokaSiva and Krishna Chaitanya"


#256-bit hash string generated by SHA256
hashCode = hash.SHA256(plain_text.decode('utf-8'))



finalhash =''

for i in range(3):
    finalhash+=(str(hashCode[i]))

print(finalhash)

#128-bit Byte string generated by taking the first half of hash code.
finalByteHashCode = bytes.fromhex(finalhash)


key = b"SUHASBHARATHKOKA"


#Function for encrypting the Plain Text by using OFB Mode of AES.
def outputFeedBackModeOfAESEncrypt(plain_text,key,initial_vector = key):
    position = 0
    finalCipherText = []
    originalInitialVector = initial_vector
    cipherT = AES.new(key, AES.MODE_ECB)
    if len(plain_text) % 16 != 0:
        plain_text += b"1"
    while len(plain_text) % 16 != 0:
        plain_text += b"0"
        
    while position + 16 <= len(plain_text):
        forXor = cipherT.encrypt(initial_vector)
        nextPosition = position + 16
        toEnc = plain_text[position:nextPosition]
        cipher_text = bytes([forXor[i] ^ toEnc[i] for i in range(16)])
        finalCipherText.append(cipher_text)
        position += 16
        initial_vector = forXor
    return (originalInitialVector, finalCipherText)



#Function for Decrypting the cipher text. 
def outputFeedBackModeOfAESDecrypt(finalCipherText, key, initial_vector):
    plain_text = b""
    cipherT = AES.new(key, AES.MODE_ECB)
    for chunk in finalCipherText:
        forXor = cipherT.encrypt(initial_vector)
        plain_text += bytes([forXor[i] ^ chunk[i] for i in range(15)])
        initial_vector = forXor
    while plain_text[-1] == 48:
        plain_text = plain_text[0:-1]
    if plain_text[-1] == 49:
        plain_text = plain_text[0:-1]
    return plain_text



# Pass Plaintext get the cipherText
initial_vector, result = outputFeedBackModeOfAESEncrypt(plain_text, key)
print(initial_vector, result)


#Pass the Cipher Text and get the Plain Text
plain = outputFeedBackModeOfAESDecrypt(result, key, initial_vector)
print(plain)